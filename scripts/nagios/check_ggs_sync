#!/usr/bin/perl -w  

use strict;
use lib '/home/app/oracle/admin/DBA/lib';

use Getopt::Std;
use Db::CONFIG;
use Db::DATABASE;



use vars qw ( $opt_d $opt_w $opt_c );

my %ERRORS = ('UNKNOWN' , '-1',
              'OK' , '0',
              'WARNING', '1',
              'CRITICAL', '2');

main();

sub main {

    getopts('d:w:c:');

    if (!defined $opt_d || !defined $opt_w || !defined $opt_c || ($opt_w >= $opt_c)){

        print "Reporting database status plugin.\n\n";
        print "Usage : check_ggs_sync -d DB_NAME -w minutes_delay -c minutes_delay\n";

        exit $ERRORS{'UNKNOWN'};
    }

    if ( Util::UTIL::isMonitor( $opt_d ) =~ /No/ ) {
        print "Database Monitoring suspended for maintenance. - OK";
        exit $ERRORS{'OK'};
    }

    my $delay = checkDestStatus( $opt_d );

    print "Reporting database is behind $delay minutes.";

    if ( $delay >= $opt_c ) {
        exit $ERRORS{'CRITICAL'};
    } elsif ( $delay >= $opt_w && $delay < $opt_c ) {
        exit $ERRORS{'WARNING'};
    } else {
        exit $ERRORS{'OK'};
    }

}


sub checkDestStatus {

    my ($database, $destination, $result) = ( @_, '' );

    my $config = new Db::CONFIG ( $database );

    my $dh = new Db::DATABASE( $database );

    $_ = $dh->runSQL2( "$ENV{ORACLE_BASE}/admin/DBA/scripts/nagios/sql/ggs_sync.sql" );


    @_ = split ('\n', $_ );

    foreach ( @_ ) {

        if ( $_ =~ /^$/ ) {
            next;
        }

        $_ =~ s/^\s+//g;
        $result = $_;

    }

    return $result;

}

