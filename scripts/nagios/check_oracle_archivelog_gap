#!/usr/bin/perl -w  

use strict;
use lib '/home/app/oracle/admin/DBA/lib';

use Getopt::Std;
use Db::CONFIG;
use Db::DATABASE;


use vars qw ( $opt_d ); 

my %ERRORS = ('UNKNOWN' , '-1',
              'OK' , '0',
              'WARNING', '1',
              'CRITICAL', '2');

main();

sub main {
    my $gaps = '';

    getopts('d:w:c:');

    if (!defined $opt_d){
	print "Dataguard archivelog gap monitor plugin.\n\n";
        print "Usage : check_oracle_archivelog_gap -d DB_NAME \n";
        exit $ERRORS{'UNKNOWN'};
    }

    if ( Util::UTIL::isMonitor( $opt_d ) =~ /No/ ) {
        print "Database Monitoring suspended for maintenance. - OK";
        exit $ERRORS{'OK'};
    }

    $gaps =  checkArchivelogGap ( uc $opt_d );
    print "Archive log Gaps($gaps)";
    
    if ( $gaps > 0 ) {
        exit $ERRORS{'CRITICAL'};
    } else {
        exit $ERRORS{'OK'};
    }
}

sub checkArchivelogGap {
    my ($database, $gaps ) = ( @_, '');
    my $config = new Db::CONFIG( $database );
    my $dh = new Db::DATABASE( $database ); 

    $_ = $dh->runSQL2( $config->getSysUser(), "$ENV{ORACLE_BASE}/admin/DBA/scripts/nagios/sql/archive_gap.sql" );
    @_ = split ( '\n' , $_ ); 

    foreach ( @_ ) {
        if ( $_ =~ /^$/ ) {
            next;
        }
        $_ =~ s/\s+//g;
        $gaps = $_;
    }

    return $gaps;
}




