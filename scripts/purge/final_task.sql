set line 140
set serverout on
set timing on


alter session force parallel ddl;
alter session force parallel dml;



truncate table UTL$INDEXES;
truncate table UTL$TABLES;
truncate table UTL$CONSTRAINTS;

rem TRADE 6:24 , 6:41
INSERT INTO WHITNEY.TERMINATED_TRADE_KEY(TRADE_KEY)
SELECT TRADE_KEY FROM WHITNEY.TRADE
WHERE TRADE_DATE >= '01-JAN-2011';
COMMIT;
exec utl_purge.purge_data_cascade_batch('WHITNEY','TRADE','SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY',8);
truncate table whitney.TERMINATED_TRADE_KEY;



rem QUOTE 2 seconds, 
INSERT INTO WHITNEY.TERMINATED_TRADE_KEY(TRADE_KEY)
SELECT QUOTE_KEY FROM WHITNEY.QUOTE
WHERE LAST_UPDATED_DATE >= '01-JAN-2011';
COMMIT;
exec utl_purge.purge_data_cascade_batch('WHITNEY','QUOTE','SELECT TRADE_KEY AS QUOTE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY',8);
truncate table whitney.TERMINATED_TRADE_KEY;


rem PRICING_INPUT 8:14
INSERT INTO WHITNEY.TERMINATED_TRADE_KEY(TRADE_KEY)
SELECT PRICING_INPUT_KEY FROM WHITNEY.PRICING_INPUT
WHERE LAST_UPDATED_DATE >= '01-JAN-2011';
COMMIT;
exec utl_purge.purge_data_cascade_batch('WHITNEY','PRICING_INPUT','SELECT TRADE_KEY AS PRICING_INPUT_KEY FROM WHITNEY.TERMINATED_TRADE_KEY',8);
truncate table whitney.TERMINATED_TRADE_KEY;


rem PRICING_ROUND 
INSERT INTO WHITNEY.TERMINATED_TRADE_KEY(TRADE_KEY)
SELECT PRICING_ROUND_KEY FROM WHITNEY.PRICING_ROUND
WHERE LAST_UPDATED_DATE >= '01-JAN-2011';
COMMIT;
exec utl_purge.purge_data_cascade_batch('WHITNEY','PRICING_ROUND','SELECT TRADE_KEY AS PRICING_ROUND_KEY FROM WHITNEY.TERMINATED_TRADE_KEY',8);
truncate table whitney.TERMINATED_TRADE_KEY;


rem TRADE_REQUEST
INSERT INTO WHITNEY.TERMINATED_TRADE_KEY(TRADE_KEY)
SELECT TRADE_REQUEST_KEY FROM WHITNEY.TRADE_REQUEST
WHERE LAST_UPDATED_DATE >= '01-JAN-2011';
COMMIT;
exec utl_purge.purge_data_cascade_batch('WHITNEY','TRADE_REQUEST','SELECT TRADE_KEY AS TRADE_REQUEST_KEY FROM WHITNEY.TERMINATED_TRADE_KEY',8);
truncate table whitney.TERMINATED_TRADE_KEY;


rem PRICE_INPUT_BANK_LIST
INSERT INTO WHITNEY.TERMINATED_TRADE_KEY(TRADE_KEY)
SELECT PRICE_INPUT_BANK_LIST_KEY FROM WHITNEY.PRICE_INPUT_BANK_LIST
WHERE LAST_UPDATED_DATE >= '01-JAN-2011';
COMMIT;
exec utl_purge.purge_data_cascade_batch('WHITNEY','PRICE_INPUT_BANK_LIST','SELECT TRADE_KEY AS PRICE_INPUT_BANK_LIST_KEY FROM WHITNEY.TERMINATED_TRADE_KEY',8);
truncate table whitney.TERMINATED_TRADE_KEY;



rem MARGIN_POSITION_TRANS
INSERT INTO WHITNEY.TERMINATED_TRADE_KEY(TRADE_KEY)
SELECT MARGIN_POSITION_TRANS_KEY FROM WHITNEY.MARGIN_POSITION_TRANS
WHERE DATE_TIME >= '01-JAN-2011';
COMMIT;
exec utl_purge.purge_data_cascade_batch('WHITNEY','MARGIN_POSITION_TRANS','SELECT TRADE_KEY AS MARGIN_POSITION_TRANS_KEY FROM WHITNEY.TERMINATED_TRADE_KEY',8);
truncate table whitney.TERMINATED_TRADE_KEY;

 
rem JOURNAL_ENTRY
INSERT INTO WHITNEY.TERMINATED_TRADE_KEY(TRADE_KEY)
SELECT JOURNAL_ENTRY_KEY FROM WHITNEY.JOURNAL_ENTRY
WHERE EFFECTIVE_DATE >= '01-JAN-2011';
COMMIT;
exec utl_purge.purge_data_cascade_batch('WHITNEY','JOURNAL_ENTRY','SELECT TRADE_KEY AS JOURNAL_ENTRY_KEY FROM WHITNEY.TERMINATED_TRADE_KEY',8);
truncate table whitney.TERMINATED_TRADE_KEY;


rem BR_ACCOUNT_BALANCE
INSERT INTO WHITNEY.TERMINATED_TRADE_KEY(TRADE_KEY)
SELECT BR_ACCOUNT_BALANCE_KEY FROM WHITNEY.BR_ACCOUNT_BALANCE
WHERE POST_DATE >= '01-JAN-2011';
COMMIT;
exec utl_purge.purge_data_cascade_batch('WHITNEY','BR_ACCOUNT_BALANCE','SELECT TRADE_KEY AS BR_ACCOUNT_BALANCE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY',8);
truncate table whitney.TERMINATED_TRADE_KEY;



rem Need to decide whether we need to run below procedure everytime we finish the steps or once at the end of the all.
rem exec utl_purge.REORGANIZE_OBJ;




-- UPDATE GREEN ORDERS
UPDATE WHITNEY.TRADE_REQUEST
SET IS_AVAILABLE = 'N'
WHERE IS_AVAILABLE = 'Y'
AND TRADE_REQUEST_KEY IN
(
  SELECT TRADE_REQUEST_KEY
  FROM WHITNEY.PRICING_INPUT
  WHERE PRICING_TYPE = 'ORDER'
  AND PRICING_INPUT_KEY IN
  (
    SELECT PRICING_INPUT_KEY
    FROM WHITNEY.PRICING_ROUND
    WHERE PRICING_ROUND_KEY NOT IN
    (
      SELECT PRICING_ROUND_KEY
      FROM WHITNEY.TRADE
    )
  )
);

-- UPDATE ESP ORDERS
UPDATE WHITNEY.PRICING_INPUT
SET
  IS_ACTIVE = 'N',
  PRICING_INPUT_STATUS = 'CANCELLED',
  CANCEL_DATE = SYSDATE
WHERE PRICING_TYPE = 'ESP_ORDER'
AND PRICING_INPUT_KEY IN
(
  SELECT PRICING_INPUT_KEY
  FROM WHITNEY.PRICING_ROUND
  WHERE PRICING_ROUND_KEY NOT IN
  (
    SELECT PRICING_ROUND_KEY
    FROM WHITNEY.TRADE
  )
);


-- UPDATE REQUESTS
UPDATE WHITNEY.PRICING_INPUT
SET IS_AVAILABLE = 'N'
WHERE IS_AVAILABLE = 'Y'
AND PRICING_TYPE = 'REQUEST'
AND PRICING_INPUT_KEY IN
(
  SELECT PRICING_INPUT_KEY
  FROM WHITNEY.PRICING_ROUND
  WHERE PRICING_ROUND_KEY NOT IN
  (
    SELECT PRICING_ROUND_KEY
    FROM WHITNEY.TRADE
  )
);

UPDATE WHITNEY.COMPLEX_ORDER
SET COMPLEX_ORDER_STATUS = 'CANCELLED'
WHERE COMPLEX_ORDER_STATUS != 'CANCELLED'
AND COMPLEX_ORDER_KEY IN
(
  SELECT COMPLEX_ORDER_KEY
  FROM WHITNEY.CO_TRADE_LINK
  WHERE TRADE_ID NOT IN
  (
    SELECT TRADE_ID
    FROM WHITNEY.TRADE
  )
);

COMMIT;


ALTER TABLE WHITNEY.ORDER_HISTORY TRUNCATE PARTITION ORDER_HISTORY_2010_Q1 DROP STORAGE;
ALTER TABLE WHITNEY.ORDER_HISTORY TRUNCATE PARTITION ORDER_HISTORY_2010_Q2 DROP STORAGE;
ALTER TABLE WHITNEY.ORDER_HISTORY TRUNCATE PARTITION ORDER_HISTORY_2010_Q3 DROP STORAGE;
ALTER TABLE WHITNEY.ORDER_HISTORY TRUNCATE PARTITION ORDER_HISTORY_2010_Q4 DROP STORAGE;


ALTER INDEX WHITNEY.IDX_ORDER_HISTORY_03 REBUILD PARALLEL 16;
ALTER INDEX WHITNEY.IDX_ORDER_HISTORY_04 REBUILD PARALLEL 16;
ALTER INDEX WHITNEY.IDX_ORDER_HISTORY_05 REBUILD PARALLEL 16;
ALTER INDEX WHITNEY.IDX_ORDER_HISTORY_01 REBUILD PARALLEL 16;
ALTER INDEX WHITNEY.IDX_ORDER_HISTORY_06 REBUILD PARALLEL 16;
ALTER INDEX WHITNEY.PK_ORDER_HISTORY REBUILD PARALLEL 16;

ALTER INDEX WHITNEY.IDX_ORDER_HISTORY_03 PARALLEL 1;
ALTER INDEX WHITNEY.IDX_ORDER_HISTORY_04 PARALLEL 1;
ALTER INDEX WHITNEY.IDX_ORDER_HISTORY_05 PARALLEL 1;
ALTER INDEX WHITNEY.IDX_ORDER_HISTORY_01 PARALLEL 1;
ALTER INDEX WHITNEY.IDX_ORDER_HISTORY_06 PARALLEL 1;
ALTER INDEX WHITNEY.PK_ORDER_HISTORY PARALLEL;





DELETE WHITNEY.AUDIT_LOG PARTITION (AUDIT_LOG_ARCHIVE);
DELETE WHITNEY.AUDIT_LOG PARTITION (AUDIT_LOG_2010_Q1);
DELETE WHITNEY.AUDIT_LOG PARTITION (AUDIT_LOG_2010_Q2);
DELETE WHITNEY.AUDIT_LOG PARTITION (AUDIT_LOG_2010_Q3);
DELETE WHITNEY.AUDIT_LOG PARTITION (AUDIT_LOG_2010_Q4);


SELECT 'Purge finished at                  : '||SYSTIMESTAMP FROM DUAL;

