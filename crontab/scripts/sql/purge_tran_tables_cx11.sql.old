SPOOL WEEKLY_PURGE_CX11

SET TIMING ON
SET ECHO ON

WHENEVER SQLERROR CONTINUE

SET HEADING OFF

SELECT 'Purge started at                   : '||SYSTIMESTAMP FROM DUAL;

SET HEADING ON

/*
 *
 * PURGE ORDER_HISTORY
 *
 **/

    prompt WHITNEY.ORDER_HISTORY:

    DELETE WHITNEY.ORDER_HISTORY PARTITION (ORDER_HISTORY_2010_Q1);
    DELETE WHITNEY.ORDER_HISTORY PARTITION (ORDER_HISTORY_2010_Q2);
    DELETE WHITNEY.ORDER_HISTORY PARTITION (ORDER_HISTORY_2010_Q3);
    DELETE WHITNEY.ORDER_HISTORY PARTITION (ORDER_HISTORY_2010_Q4);
    DELETE WHITNEY.ORDER_HISTORY PARTITION (ORDER_HISTORY_2011_Q1);
    DELETE WHITNEY.ORDER_HISTORY PARTITION (ORDER_HISTORY_2011_Q2);
    DELETE WHITNEY.ORDER_HISTORY partition (ORDER_HISTORY_2011_Q3) WHERE EVENT_DATE_TIME < ADD_MONTHS(SYSDATE, -3);

    COMMIT;

/*
 *
 * PURGE AUDIT_LOG
 *
 **/

    prompt WHITNEY.AUDIT_LOG:
    DELETE WHITNEY.AUDIT_LOG PARTITION (AUDIT_LOG_ARCHIVE);
    DELETE WHITNEY.AUDIT_LOG PARTITION (AUDIT_LOG_2010_Q1);   
    DELETE WHITNEY.AUDIT_LOG PARTITION (AUDIT_LOG_2010_Q2);
    DELETE WHITNEY.AUDIT_LOG PARTITION (AUDIT_LOG_2010_Q3);
    DELETE WHITNEY.AUDIT_LOG PARTITION (AUDIT_LOG_2010_Q4);
    DELETE WHITNEY.AUDIT_LOG PARTITION (AUDIT_LOG_2011_Q1);
    DELETE WHITNEY.AUDIT_LOG PARTITION (AUDIT_LOG_2011_Q2);
    DELETE WHITNEY.AUDIT_LOG PARTITION (AUDIT_LOG_2011_Q3) WHERE DATE_TIME < ADD_MONTHS(SYSDATE, -3);

    COMMIT;

/*
 *
 * PURGE JOURNAL_ENTRY
 *
 **/

    prompt WHITNEY.JOURNAL_ENTRY:
    DELETE WHITNEY.JOURNAL_ENTRY WHERE EFFECTIVE_DATE < ADD_MONTHS(SYSDATE, -3);

    COMMIT;

/*
 *
 * PURGE BR_ACCOUNT_BALANCE
 *
 **/

    prompt WHITNEY.BR_ACCOUNT_BALANCE:
    DELETE WHITNEY.BR_ACCOUNT_BALANCE WHERE POST_DATE < ADD_MONTHS(SYSDATE, -3);

    COMMIT;

/*
 *
 * PURGE MARGIN_POSITION_TRANS
 *
 **/

    prompt WHITNEY.MARGIN_CLOSING_TRADE:
    DELETE WHITNEY.MARGIN_CLOSING_TRADE 
    WHERE OPN_POSITION_TRANS_KEY IN 
    (
    SELECT MARGIN_POSITION_TRANS_KEY 
    FROM WHITNEY.MARGIN_POSITION_TRANS
    WHERE DATE_TIME < ADD_MONTHS(SYSDATE, -3)
    );

    prompt WHITNEY.MARGIN_CLOSING_TRADE:
    DELETE WHITNEY.MARGIN_CLOSING_TRADE 
    WHERE CLS_POSITION_TRANS_KEY IN 
    (
    SELECT MARGIN_POSITION_TRANS_KEY 
    FROM WHITNEY.MARGIN_POSITION_TRANS
    WHERE DATE_TIME < ADD_MONTHS(SYSDATE, -3)
    );

    prompt WHITNEY.MARGIN_POSITION_TRANS:
    DELETE  WHITNEY.MARGIN_POSITION_TRANS
    WHERE DATE_TIME < ADD_MONTHS(SYSDATE, -3);

    COMMIT;

/*
 *
 * PURGE TRADES
 *
 **/


    INSERT INTO WHITNEY.TERMINATED_TRADE_KEY(TRADE_KEY)
    SELECT TRADE_KEY FROM WHITNEY.TRADE 
    WHERE TRADE_DATE < ADD_MONTHS(SYSDATE, -3);
     
    INSERT  INTO WHITNEY.TERMINATED_TRADE_KEY(TRADE_KEY) 
    SELECT  AGGREGATE_TRADE_KEY FROM WHITNEY.TRADE_LINK WHERE SINGLE_TRADE_KEY IN (SELECT TRADE_KEY FROM whitney.TERMINATED_TRADE_KEY);

    INSERT  INTO WHITNEY.TERMINATED_TRADE_KEY(TRADE_KEY) 
    SELECT  SINGLE_TRADE_KEY FROM  WHITNEY.TRADE_LINK WHERE AGGREGATE_TRADE_KEY IN (SELECT TRADE_KEY FROM whitney.TERMINATED_TRADE_KEY);  

    INSERT  INTO WHITNEY.TERMINATED_TRADE_KEY 
    SELECT  PARENT_TRADE_KEY FROM WHITNEY.TRADE WHERE TRADE_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY);

    INSERT  INTO WHITNEY.TERMINATED_TRADE_KEY 
    SELECT  PB_TRADE_KEY FROM WHITNEY.TRADE WHERE TRADE_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY);

    INSERT  INTO WHITNEY.TERMINATED_TRADE_KEY 
    SELECT  TRADE_KEY FROM WHITNEY.TRADE 
    WHERE TRADE_REQUEST_KEY IN (SELECT TRADE_REQUEST_KEY FROM WHITNEY.TRADE_REQUEST WHERE LAST_UPDATED_DATE < ADD_MONTHS(SYSDATE, -3));

    prompt WHITNEY.TERMINATED_TRADE_KEY:
    DELETE FROM WHITNEY.TERMINATED_TRADE_KEY
        WHERE ROWID IN
        (SELECT ROWID FROM 
           (SELECT 
             ROWID,
             ROW_NUMBER()
            OVER 
             (PARTITION BY TRADE_KEY ORDER BY TRADE_KEY) DUP
          FROM WHITNEY.TERMINATED_TRADE_KEY
          )
        WHERE DUP > 1); 

    UPDATE WHITNEY.TRADE SET PARENT_TRADE_KEY=NULL WHERE PARENT_TRADE_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY);

    UPDATE WHITNEY.TRADE SET PB_TRADE_KEY=NULL WHERE PB_TRADE_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY);

    prompt WHITNEY.STP_EVENT:
    DELETE  WHITNEY.STP_EVENT WHERE PRIMARY_TRADE_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY);

    prompt WHITNEY.TRADE_BLOCK_ITEM_DF:
    DELETE  WHITNEY.TRADE_BLOCK_ITEM_DF WHERE TRADE_BLOCK_ITEM_KEY IN 
    (SELECT TRADE_BLOCK_ITEM_KEY FROM WHITNEY.TRADE_BLOCK_ITEM WHERE TRADE_BLOCK_KEY in 
    (SELECT trade_block_key FROM whitney.trade_block WHERE trade_key IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY)));

    prompt WHITNEY.TRADE_BLOCK_ITEM_DF:
    DELETE  WHITNEY.TRADE_BLOCK_ITEM_DF WHERE TRADE_BLOCK_ITEM_KEY IN 
    (SELECT TRADE_BLOCK_ITEM_KEY FROM WHITNEY.TRADE_BLOCK_ITEM WHERE TRADE_BLOCK_KEY in 
    (SELECT trade_block_key FROM whitney.trade_block WHERE trade_key IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY)));

    prompt WHITNEY.TRADE_BLOCK_ITEM:
    DELETE  WHITNEY.TRADE_BLOCK_ITEM WHERE TRADE_BLOCK_KEY in 
    (SELECT trade_block_key FROM whitney.trade_block WHERE trade_key IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY));

    prompt WHITNEY.TRADE_BLOCK:
    DELETE  WHITNEY.TRADE_BLOCK WHERE TRADE_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY);

    prompt WHITNEY.TRADE_LINK:
    DELETE  WHITNEY.TRADE_LINK WHERE SINGLE_TRADE_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY);

    prompt  WHITNEY.TRADE_LINK:
    DELETE  WHITNEY.TRADE_LINK WHERE AGGREGATE_TRADE_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY);

    prompt WHITNEY.TRADE_PAYMENT:
    DELETE  WHITNEY.TRADE_PAYMENT WHERE trade_key IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY);
    
    prompt WHITNEY.TRADE_TRANSITION:
    DELETE  WHITNEY.TRADE_TRANSITION WHERE trade_key IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY);

    prompt WHITNEY.TRADE_DEFINED_FIELD:
    DELETE  WHITNEY.TRADE_DEFINED_FIELD WHERE TRADE_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY);
        
    prompt WHITNEY.TRADE_PAYMENT
    DELETE WHITNEY.TRADE_PAYMENT WHERE TRADE_KEY IN 
    (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY WHERE TRADE_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TRADE_PAYMENT));

    commit;

    prompt WHITNEY.TRADE:
    DELETE FROM WHITNEY.TRADE T 
    WHERE EXISTS 
    (SELECT 1 
    FROM WHITNEY.TERMINATED_TRADE_KEY TT
    WHERE TT.TRADE_KEY=T.TRADE_KEY);

    prompt WHITNEY.TERMINATED_TRADE_KEY:
    DELETE FROM WHITNEY.TERMINATED_TRADE_KEY;

    COMMIT;


/*
 *
 * PURGE DRAFTS
 *
 **/

    INSERT INTO WHITNEY.TERMINATED_TRADE_KEY (TRADE_KEY) SELECT TRADE_REQUEST_KEY FROM WHITNEY.TRADE_REQUEST WHERE LAST_UPDATED_DATE < ADD_MONTHS(SYSDATE, -3);

    prompt WHITNEY.MISSED_OPPORTUNITY:
    DELETE WHITNEY.MISSED_OPPORTUNITY WHERE PRICING_ROUND_KEY IN 
    (SELECT PRICING_ROUND_KEY FROM WHITNEY.PRICING_ROUND WHERE PRICING_INPUT_KEY IN 
    (SELECT PRICING_INPUT_KEY FROM WHITNEY.TRADE_REQUEST WHERE TRADE_REQUEST_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY)));
    
    prompt WHITNEY.PRICE_INPUT_BANK_LIST:
    DELETE WHITNEY.PRICE_INPUT_BANK_LIST WHERE PRICING_INPUT_KEY IN 
    (SELECT PRICING_INPUT_KEY FROM WHITNEY.PRICING_INPUT WHERE TRADE_REQUEST_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY));

    prompt WHITNEY.PRICING_INPUT_HUB_EXCL:
    DELETE WHITNEY.PRICING_INPUT_HUB_EXCL WHERE PRICING_INPUT_KEY IN (SELECT PRICING_INPUT_KEY FROM WHITNEY.PRICING_INPUT WHERE TRADE_REQUEST_KEY IN 
    (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY));

    prompt WHITNEY.PRICING_INPUT_MAKER:
    DELETE WHITNEY.PRICING_INPUT_MAKER WHERE PRICING_INPUT_KEY  IN (SELECT PRICING_INPUT_KEY FROM WHITNEY.PRICING_INPUT  WHERE TRADE_REQUEST_KEY IN 
    (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY));
   
    prompt WHITNEY.QUOTE:
    DELETE WHITNEY.QUOTE WHERE PRICING_ROUND_KEY IN 
    (SELECT PRICING_ROUND_KEY FROM WHITNEY.PRICING_ROUND WHERE PRICING_INPUT_KEY IN 
    (SELECT PRICING_INPUT_KEY FROM WHITNEY.TRADE_REQUEST WHERE TRADE_REQUEST_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY)));
    
    prompt WHITNEY.ORDER_TRANSITION:
    DELETE WHITNEY.ORDER_TRANSITION WHERE PRICING_ROUND_KEY IN 
    (SELECT PRICING_ROUND_KEY FROM WHITNEY.PRICING_ROUND WHERE PRICING_INPUT_KEY IN 
    (SELECT PRICING_INPUT_KEY FROM WHITNEY.TRADE_REQUEST WHERE TRADE_REQUEST_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY)));

    UPDATE WHITNEY.TRADE 
       SET PRICING_ROUND_KEY=NULL 
     WHERE PRICING_ROUND_KEY IN (SELECT PRICING_ROUND_KEY FROM WHITNEY.PRICING_ROUND WHERE PRICING_INPUT_KEY IN 
    (SELECT PRICING_INPUT_KEY FROM WHITNEY.PRICING_INPUT WHERE TRADE_REQUEST_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY)));

    prompt WHITNEY.PRICING_ROUND:
    DELETE  FROM WHITNEY.PRICING_ROUND WHERE PRICING_INPUT_KEY IN 
    (SELECT PRICING_INPUT_KEY FROM WHITNEY.PRICING_INPUT WHERE TRADE_REQUEST_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY));

    prompt WHITNEY.PRICING_INPUT:
    DELETE  FROM WHITNEY.PRICING_INPUT WHERE TRADE_REQUEST_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY);

    prompt WHITNEY.TRADE_REQUEST_DF:
    DELETE WHITNEY.TRADE_REQUEST_DF WHERE TRADE_REQUEST_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY);

    prompt WHITNEY.TRADE_BLOCK_ITEM_DF:
    DELETE WHITNEY.TRADE_BLOCK_ITEM_DF WHERE TRADE_BLOCK_ITEM_KEY IN 
    (SELECT TRADE_BLOCK_ITEM_KEY FROM  WHITNEY.TRADE_BLOCK_ITEM WHERE TRADE_BLOCK_KEY IN
    (SELECT TRADE_BLOCK_KEY FROM WHITNEY.TRADE_BLOCK WHERE TRADE_REQUEST_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY)));

    prompt WHITNEY.TRADE_BLOCK_ITEM:
    DELETE WHITNEY.TRADE_BLOCK_ITEM WHERE TRADE_BLOCK_KEY IN
    (SELECT TRADE_BLOCK_KEY FROM WHITNEY.TRADE_BLOCK WHERE TRADE_REQUEST_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY));

    prompt WHITNEY.TRADE_BLOCK:
    DELETE WHITNEY.TRADE_BLOCK WHERE TRADE_REQUEST_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY);

    prompt WHITNEY.TRADE_REQUEST:
    DELETE  FROM WHITNEY.TRADE_REQUEST WHERE TRADE_REQUEST_KEY IN (SELECT TRADE_KEY FROM WHITNEY.TERMINATED_TRADE_KEY);

   COMMIT;

-- UPDATE TRADE_REQUEST

    UPDATE WHITNEY.TRADE_REQUEST
    SET IS_AVAILABLE = 'N'
    WHERE IS_AVAILABLE = 'Y'
    AND TRADE_REQUEST_KEY IN
    (
      SELECT TRADE_REQUEST_KEY
      FROM WHITNEY.PRICING_INPUT
      WHERE PRICING_TYPE = 'ORDER'
      AND PRICING_INPUT_KEY IN
        (
          SELECT PRICING_INPUT_KEY
          FROM WHITNEY.PRICING_ROUND
          WHERE PRICING_ROUND_KEY NOT IN
            (
              SELECT PRICING_ROUND_KEY
              FROM WHITNEY.TRADE
            )
         )
    );

-- UPDATE ESP ORDERS
 
    UPDATE WHITNEY.PRICING_INPUT
    SET IS_ACTIVE = 'N',
        PRICING_INPUT_STATUS = 'CANCELLED',
        CANCEL_DATE = SYSDATE
    WHERE PRICING_TYPE = 'ESP_ORDER'
    AND IS_ACTIVE='Y'
    AND PRICING_INPUT_KEY IN
    (
      SELECT PRICING_INPUT_KEY
      FROM WHITNEY.PRICING_ROUND
      WHERE PRICING_ROUND_KEY NOT IN
        (
          SELECT PRICING_ROUND_KEY
          FROM WHITNEY.TRADE
        )
    );

-- UPDATE REQUESTS

    UPDATE WHITNEY.PRICING_INPUT
    SET IS_AVAILABLE = 'N'
    WHERE IS_AVAILABLE = 'Y'
    AND PRICING_TYPE = 'REQUEST'
    AND PRICING_INPUT_KEY IN
      (
        SELECT PRICING_INPUT_KEY
        FROM WHITNEY.PRICING_ROUND
        WHERE PRICING_ROUND_KEY NOT IN
        (
          SELECT PRICING_ROUND_KEY
          FROM WHITNEY.TRADE
        )
      );

-- UPDATE COMPLEX_ORDER

    UPDATE WHITNEY.COMPLEX_ORDER 
    SET COMPLEX_ORDER_STATUS = 'CANCELLED'
    WHERE COMPLEX_ORDER_STATUS != 'CANCELLED'
    AND COMPLEX_ORDER_KEY IN 
      (
        SELECT COMPLEX_ORDER_KEY 
        FROM WHITNEY.CO_TRADE_LINK 
        WHERE TRADE_ID NOT IN
          (
            SELECT TRADE_ID 
            FROM WHITNEY.TRADE
          )
      );

     COMMIT;


-- Automatically disable drafts older than one month using script below --DEMO-792, UAT-666

    UPDATE WHITNEY.PRICING_INPUT
    SET IS_AVAILABLE ='N',
    IS_ACTIVE ='N',
    PRICING_INPUT_STATUS= 'CANCELLED', 
    LAST_UPDATED_BY='Draft Disabling Script', 
    LAST_UPDATED_DATE=SYSDATE
    WHERE TRADE_REQUEST_KEY IN 
    (
       SELECT TRADE_REQUEST_KEY 
       FROM WHITNEY.TRADE_REQUEST
       WHERE DEFINE_DATE <ADD_MONTHS(SYSDATE, -1)
       AND IS_AVAILABLE ='Y'
       AND IS_TEMPLATE='N'
    );


    UPDATE WHITNEY.TRADE_REQUEST
    SET IS_AVAILABLE ='N',
    LAST_UPDATED_BY='Draft Disabling Script', 
    LAST_UPDATED_DATE=SYSDATE
    WHERE DEFINE_DATE < ADD_MONTHS(SYSDATE, -1)
    AND IS_AVAILABLE ='Y'
    AND IS_TEMPLATE='N';
    
    COMMIT;

SET HEADING OFF

SELECT 'Purge finished at                   : '||SYSTIMESTAMP FROM DUAL;

SET HEADING ON

SPOOL OFF

exit
